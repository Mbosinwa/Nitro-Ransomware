<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Welcome!

What happened?

All of your important data has been locked and encrypted. There is no other way to access it without the decryption key. You have under 3 hours to decrypt your files or they will be wiped.

How do I get the decryption key?

Buy a discord nitro gift and paste the gift link in the text box. After submitting a valid gift link, you should be able to see the decryption key. Enter the decryption key into the decrypt files section and click on decrypt files. When decrypting, make sure windows defender and all other antiviruses are off. If you don't turn them off, not all files will be able to decrypt correctly.

Why trust us?

We value our reputation. If we do not do our work and liabilities, nobody will pay us. This is not in our interests. Decryption is perfectly tested and will decrypt your data.

WARNING:
Do not modify the files or try recovering them yourself. If you do so, we will not be able to decrypt them.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>